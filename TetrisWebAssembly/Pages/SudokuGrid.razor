@page "/Sudoku"
@using TetrisWebAssembly.GameLogic
@using TetrisWebAssembly.Helpers
@inject NavigationManager _nav
<video muted loop id="bg">
    <source src="./css/BGTunnel.mp4" type="video/mp4" />
</video>
<div class="controls">
<button @onclick="@(() => _nav.NavigateTo("/"))">Home</button>
<select @bind="difficulty" @bind:after="OnDifficultyChanged" class="form-select">
    <option value="" disabled selected>-- Select Difficulty --</option>
    @foreach (var difficulty in Enum.GetValues<Difficulty>())
    {
        <option value="@difficulty">@difficulty</option>
    }
</select>
</div>
@if (Grid != null && Grid.Count > 0)
{
    <div class="sudoku-grid">
        @for (int row = 0; row < Grid.Count; row++)
        {
            <div class="sudoku-row">
                @for (int col = 0; col < Grid[row].Count; col++)
                {
                    var x = row;
                    var y = col;
                    <input type="text"
                           maxlength="1"
                           pattern="[0-9]{1,5}"
                           class="sudoku-cell @(IsValid[row][col] ? "green" : "invalid-cell")"
                           value="@(Grid[row][col] == "0" ? "" : Grid[row][col].ToString())"
                           @oninput="(e) => SetGridValue(x,y,e)"
                           disabled=@IsPrefilled[row][col]
                           min="1" max="9" />
                }
            </div>
        }
    </div>
}
else
{
})
@if (Grid is not null && SudokuUtils.IsSolved(Grid))
{
    <p class="sudoku-solved">Sudoku solved!</p>
}
else
{
    <p class="sudoku-unsolved">Sudoku unsolved</p>
    <button @onclick="SolvePuzzle">Solve</button>
})